import v.builtins.arith.*;
import v.builtins.print.*;
import v.builtins.runtime_sized_array_mut_new.*;
import v.builtins.runtime_sized_array_push.*;
import v.builtins.runtime_sized_array_pop.*;
import v.builtins.runtime_sized_array_len.*;

func MakeBoard(rand_seed int) [][]bool {
  rows = [][]bool(20);
  row_i = 0;
  while row_i < 20 {
    row = []bool(20);
    col_i = 0;
    while col_i < 20 {
      random_bool = true;
      // Implicit & causes a gen check in push. Inlining will fix.
      row.push(random_bool);
      set col_i = col_i + 1;
    }
    rows.push(row); // Same here.
    set row_i = row_i + 1;
  }
  return rows;
}

func Display(
  map &[][]bool)
{
  row_i = 0;
  while row_i < 20 {
    row = map[row_i];
    col_i = 0;
    while col_i < 20 {
      walkable = row[col_i];
      if walkable {
        print(".");
      } else {
        print("#");
      }
      set col_i = col_i;
    }
    print("\n");
    set row_i = row_i + 1;
  }
}

exported func main() int {
  random_seed = 1337;
  board_0 = MakeBoard(random_seed);
  while board_0.len() > 0 {
    row = board_0.pop();
    while row.len() > 0 {
      row.pop();
    }
    [] = row;
  }
  [] = board_0;
  return 0;
}
